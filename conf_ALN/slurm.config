/*
SLURM configuration file. Resource specifications for SLURM cluster
*/

// Parameters 
params {

    genome_base = "/home/a1222106/fastdir/a1222106/Refs"
    // Example of conditional - if you have multiple genomes to choose from 
    // genome_base = params.genome = "human_g1k_v37_decoy" ? "/home/a1222106/fastdir/a1222106/Refs" : params.genome = "hg19" ? "/home/ //a1222106/fastdir/a1222106/Refs" : "/home/a1222106/fastdir/a1222106/Refs"


}

// Trance file column order
trace.fields = 'process,task_id,hash,name,native_id,attempt,status,exit,realtime,cpus,memory,%cpu,vmem,rss,submit,start,complete,duration,realtime,rchar,wchar'

// For testing small datasets use 'test' EXECUTOR
// Defining test EXECUTOR
//executor {
//    name = 'test'
//    jobName = { "$task.hash" }
//}


// Defining slurm EXECUTOR
executor {
    name = 'slurm'
    jobName = { "$task.hash" }
}

// Process resources
process {

    // General process (task) parameters
    queue = 'cpu'
    cpus = 1
    memory = { 4.GB * task.attempt }
    time = { 1.h * task.attempt }
    // clusterOptions = "-A $params.userID"

    // Error strategy for failing tasks
    errorStrategy = { task.exitStatus in 137..140 ? 'retry' : 'terminate' }
    maxRetries = 6  // Number of times a task can fail
    maxErrors = '-1' // Turn off maxErrors

    withName:runFastp {
        cpus = 4
        memory = { 8.GB * task.attempt }
        time = { 15.h * task.attempt }
    }

    withName:runBwaAln {
        cpus = 8
        memory = { 12.GB * task.attempt }
        time = { 15.h * task.attempt }
    }

    withName:runDeDup {
        cpus = 4
        memory = { 12.GB * task.attempt }
        time = { 15.h * task.attempt }
    }

    withName:runMitoMD {
        cpus = 4
        memory = { 8.GB * task.attempt }
        time = { 15.h * task.attempt }
    }

    withName:runSamtoolsIdxStats {
        cpus = 4
        memory = { 4.GB * task.attempt }
        time = { 15.h * task.attempt }
    }

    withName:runPreseq {
        cpus = 4
        memory = { 12.GB * task.attempt }
        time = { 15.h * task.attempt }
    }

     withName:runIndelRealignment {
         cpus = 4 
         memory = { 12.GB * task.attempt }
         time = { 15.h * task.attempt }
     }

     withName:runMapDamage {
         cpus = 4
         memory = { 12.GB * task.attempt }
         time = { 15.h * task.attempt }
     }

     withName:runTrimBam {
         cpus = 4
         memory = { 4.GB * task.attempt }
         time = { 1.h * task.attempt }
     }

     withName:runQualimap {
         cpus = 4
         memory = { 2.GB * task.attempt }
         time = { 1.h * task.attempt }
     }

     withName:runBedTools {
         cpus = 4
         memory = { 2.GB * task.attempt }
         time = { 1.h * task.attempt }
     }

}
